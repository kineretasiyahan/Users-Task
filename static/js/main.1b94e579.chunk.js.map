{"version":3,"sources":["Service/service.js","components/Pages/Home/HomePage.jsx","App.js","reportWebVitals.js","index.js"],"names":["getAllUsersData","a","fetch","console","log","HomePage","statusColor","useState","users","setUsers","className","onClick","then","response","json","data","catch","error","map","user","index","status","style","color","alignItems","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAMA,EAAe,uCAAG,sBAAAC,EAAA,+EAEHC,MAAM,wCAFH,wEAKhBC,QAAQC,IAAI,sCALI,wDAAH,qDAQNJ,I,eCwBAK,EA5BE,WACb,IACIC,EADJ,EAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KAQA,OACI,gCACI,oBAAIC,UAAU,mBAAd,yBACA,qBAAKA,UAAU,gBAAf,SAA+B,wBAAQC,QAThB,WAC3BX,IACKY,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACC,GAAD,OAAcJ,EAASI,EAASE,SACrCC,OAAM,SAAAC,GAAK,OAAId,QAAQC,IAAIa,OAKG,yBAFnC,OAGKT,QAHL,IAGKA,OAHL,EAGKA,EAAOU,KAAI,SAACC,EAAMC,GAOf,OALId,EADgB,WAAhBa,EAAKE,OACS,QAGA,MAEX,6BACH,qBAAIC,MAAO,CAAEC,MAAOjB,EAAYkB,WAAW,YAA3C,yBAAsEL,EAAKE,WAD/DD,UCfjBK,MAPf,WACE,OACE,qBAAKf,UAAU,MAAf,SACE,cAAC,EAAD,OCOSgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1b94e579.chunk.js","sourcesContent":["const getAllUsersData = async () => {\r\n    try {\r\n        return await fetch('https://gorest.co.in/public/v1/users')\r\n    }\r\n    catch (error) {\r\n        console.log(\"error in method get all users\" + error)\r\n    }\r\n}\r\nexport default getAllUsersData;","import React, { useState } from 'react';\r\nimport getAllUsersData from '../../../Service/service';\r\nimport './HomePage.css';\r\n\r\nconst HomePage = () => {\r\n    const [users, setUsers] = useState();\r\n    let statusColor;\r\n    const getAllUsersDataOnClick = () => {\r\n        getAllUsersData()\r\n            .then(response => response.json())\r\n            .then((response) => setUsers(response.data))\r\n            .catch(error => console.log(error));\r\n    }\r\n    return (\r\n        <div>\r\n            <h1 className=\"header-Home-Page\"> Users App </h1>\r\n            <div className=\"search-Button\"><button onClick={getAllUsersDataOnClick}>User list</button></div>\r\n            {users?.map((user, index) => {\r\n                if (user.status === \"active\") {\r\n                    statusColor = \"green\"\r\n                }\r\n                else {\r\n                    statusColor = \"red\"\r\n                }\r\n                return <ul key={index}>\r\n                    <li style={{ color: statusColor,alignItems:\"flex-end\" }}>user status:{user.status}</li>\r\n                </ul>\r\n            })}\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default HomePage;\r\n","import HomePage from './components/Pages/Home/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HomePage/>\n    </div>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}